choiceTestArray.chpl:3: In function 'main':
choiceTestArray.chpl:4: warning: 'RNG' is deprecated; the PCG random algorithm is now used exclusively in the stable Random interface
choiceTestArray.chpl:6: warning: 'RNG' is deprecated; the PCG random algorithm is now used exclusively in the stable Random interface
choiceTestArray.chpl:4: warning: 'createRandomStream' is deprecated; please use 'new randomStream' instead
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(real(64),true)).choice(x: [domain(1,int(64),one)] R, size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64)) from function 'test'
  choiceTestArray.chpl:25: called as test(stream: owned PCGRandomStreamInternal(real(64),true), X: [domain(1,int(64),one)] R, size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:5: called as runTests(stream: owned PCGRandomStreamInternal(real(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),positive), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),positive), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(real(64),true)).choice(x: [domain(1,int(64),positive)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64)) from function 'test'
  choiceTestArray.chpl:38: called as test(stream: owned PCGRandomStreamInternal(real(64),true), X: [domain(1,int(64),positive)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:5: called as runTests(stream: owned PCGRandomStreamInternal(real(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64)) from method 'choice'
  choiceTestUtils.chpl:29: called as (PCGRandomStreamInternal(real(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64)) from function 'test'
  choiceTestArray.chpl:41: called as test(stream: owned PCGRandomStreamInternal(real(64),true), X: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:5: called as runTests(stream: owned PCGRandomStreamInternal(real(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:29: called as (PCGRandomStreamInternal(real(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:42: called as test(stream: owned PCGRandomStreamInternal(real(64),true), X: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:5: called as runTests(stream: owned PCGRandomStreamInternal(real(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(real(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32)) from function 'test'
  choiceTestArray.chpl:47: called as test(stream: owned PCGRandomStreamInternal(real(64),true), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:5: called as runTests(stream: owned PCGRandomStreamInternal(real(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(real(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32)) from function 'test'
  choiceTestArray.chpl:51: called as test(stream: owned PCGRandomStreamInternal(real(64),true), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:5: called as runTests(stream: owned PCGRandomStreamInternal(real(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(real(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32)) from function 'test'
  choiceTestArray.chpl:53: called as test(stream: owned PCGRandomStreamInternal(real(64),true), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:5: called as runTests(stream: owned PCGRandomStreamInternal(real(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(real(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16)) from function 'test'
  choiceTestArray.chpl:55: called as test(stream: owned PCGRandomStreamInternal(real(64),true), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:5: called as runTests(stream: owned PCGRandomStreamInternal(real(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(real(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:63: called as test(stream: owned PCGRandomStreamInternal(real(64),true), X: [domain(1,int(64),one)] int(64), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:5: called as runTests(stream: owned PCGRandomStreamInternal(real(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(real(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:64: called as test(stream: owned PCGRandomStreamInternal(real(64),true), X: [domain(1,int(64),one)] int(64), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:5: called as runTests(stream: owned PCGRandomStreamInternal(real(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(real(64),true), X: domain(1,int(64),one), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(real(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:65: called as test(stream: owned PCGRandomStreamInternal(real(64),true), X: [domain(1,int(64),one)] int(64), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:5: called as runTests(stream: owned PCGRandomStreamInternal(real(64),true))
choiceTestArray.chpl:3: In function 'main':
choiceTestArray.chpl:6: warning: 'createRandomStream' is deprecated; please use 'new randomStream' instead
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(int(64),true)).choice(x: [domain(1,int(64),one)] R, size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64)) from function 'test'
  choiceTestArray.chpl:25: called as test(stream: owned PCGRandomStreamInternal(int(64),true), X: [domain(1,int(64),one)] R, size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:7: called as runTests(stream: owned PCGRandomStreamInternal(int(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),positive), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),positive), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(int(64),true)).choice(x: [domain(1,int(64),positive)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64)) from function 'test'
  choiceTestArray.chpl:38: called as test(stream: owned PCGRandomStreamInternal(int(64),true), X: [domain(1,int(64),positive)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),positive)] real(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:7: called as runTests(stream: owned PCGRandomStreamInternal(int(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64)) from method 'choice'
  choiceTestUtils.chpl:29: called as (PCGRandomStreamInternal(int(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64)) from function 'test'
  choiceTestArray.chpl:41: called as test(stream: owned PCGRandomStreamInternal(int(64),true), X: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] int(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:7: called as runTests(stream: owned PCGRandomStreamInternal(int(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:29: called as (PCGRandomStreamInternal(int(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:42: called as test(stream: owned PCGRandomStreamInternal(int(64),true), X: [domain(1,int(64),one)] int(64), size: nothing, replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:7: called as runTests(stream: owned PCGRandomStreamInternal(int(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(int(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32)) from function 'test'
  choiceTestArray.chpl:47: called as test(stream: owned PCGRandomStreamInternal(int(64),true), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] real(32), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:7: called as runTests(stream: owned PCGRandomStreamInternal(int(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(int(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32)) from function 'test'
  choiceTestArray.chpl:51: called as test(stream: owned PCGRandomStreamInternal(int(64),true), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] int(32), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:7: called as runTests(stream: owned PCGRandomStreamInternal(int(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(int(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32)) from function 'test'
  choiceTestArray.chpl:53: called as test(stream: owned PCGRandomStreamInternal(int(64),true), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(32), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:7: called as runTests(stream: owned PCGRandomStreamInternal(int(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(int(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16)) from function 'test'
  choiceTestArray.chpl:55: called as test(stream: owned PCGRandomStreamInternal(int(64),true), X: [domain(1,int(64),one)] int(64), size: int(64), replace: bool, prob: [domain(1,int(64),one)] uint(16), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:7: called as runTests(stream: owned PCGRandomStreamInternal(int(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(int(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:63: called as test(stream: owned PCGRandomStreamInternal(int(64),true), X: [domain(1,int(64),one)] int(64), size: domain(1,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:7: called as runTests(stream: owned PCGRandomStreamInternal(int(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(int(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:64: called as test(stream: owned PCGRandomStreamInternal(int(64),true), X: [domain(1,int(64),one)] int(64), size: domain(2,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:7: called as runTests(stream: owned PCGRandomStreamInternal(int(64),true))
$CHPL_HOME/modules/standard/Random.chpl:nnnn: In function '_choiceProbabilities':
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
$CHPL_HOME/modules/standard/Random.chpl:nnnn: warning: scan has been serialized (see issue #12482)
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choiceProbabilities(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function '_choice'
  $CHPL_HOME/modules/standard/Random.chpl:nnnn: called as _choice(stream: borrowed PCGRandomStreamInternal(int(64),true), X: domain(1,int(64),one), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from method 'choice'
  choiceTestUtils.chpl:34: called as (PCGRandomStreamInternal(int(64),true)).choice(x: [domain(1,int(64),one)] int(64), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64)) from function 'test'
  choiceTestArray.chpl:65: called as test(stream: owned PCGRandomStreamInternal(int(64),true), X: [domain(1,int(64),one)] int(64), size: domain(3,int(64),one), replace: bool, prob: [domain(1,int(64),one)] real(64), trials: int(64)) from function 'runTests'
  choiceTestArray.chpl:7: called as runTests(stream: owned PCGRandomStreamInternal(int(64),true))
