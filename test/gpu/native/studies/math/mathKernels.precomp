#!/bin/bash

chpl=$3
chpl_home=$($chpl --print-chpl-home)
compiler=$($chpl_home/util/printchplenv --all --simple | grep CHPL_TARGET_CXX= | sed 's/CHPL_TARGET_CXX=//')
llvm_version=$($chpl_home/util/printchplenv --all --simple | grep CHPL_LLVM_VERSION= | sed 's/CHPL_LLVM_VERSION=//')
cuda_path=$($chpl_home/util/printchplenv --all --internal --simple | grep CHPL_CUDA_PATH= | sed 's/CHPL_CUDA_PATH=//')
nvcc_compiler=$cuda_path/bin/nvcc

NVCC_FLAGS=""
CLANG_FLAGS=""
if [[ "$llvm_version" -ge 15 ]]; then
  # LLVM 15 and later require default to -fPIE, so streamKernel.cu needs to be compiled with -fPIE
  NVCC_FLAGS="--compiler-options -fPIE"
fi


COMMON_DEFINES="-Dmk_MATH_FUNC=tanhf"

# build the nvcc version
DEFINES="$COMMON_DEFINES -Dmk_PREFIX=cu_nvcc_ -Dmk_LABEL=\"nvcc\""
$nvcc_compiler $DEFINES -O3 --use_fast_math $NVCC_FLAGS -c mathKernels.cu -o mathKernels_cu.o
$nvcc_compiler -O3 --use_fast_math mathKernels_cu.o -o mathKernelsDlinked.o -dlink

DEFINES="$COMMON_DEFINES -Dmk_PREFIX=cu_clang_ -Dmk_LABEL=\"clang\""
# build the clang version
$compiler $DEFINES -I$cuda_path/include -O3 -ffast-math $CLANG_FLAGS -c mathKernels.cu -S -emit-llvm

