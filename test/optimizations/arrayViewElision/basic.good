ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),both,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),both,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),both,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),both,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),both,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),both,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),high,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),high,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),high,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),high,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),high,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),high,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),low,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),low,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),low,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),low,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),low,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),low,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),both,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),both,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),low,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),low,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),neither,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),neither,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),neither,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),neither,one)

ArrayViewElision supported basic.chpl:5
	lhsBaseType: [domain(1,int(64),one)] int(64)
	lhsIndexingExprs: 
		range(int(64),neither,one)
	rhsBaseType: [domain(1,int(64),one)] int(64)
	rhsIndexingExprs: 
		range(int(64),neither,one)

Set first two:
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 1 1 1 1 1 1 1 1
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 1 1 1 1 1 1 1 1
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 1 1 1 1 1 1 1 1
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 1 1 1 1 1 1 1 1
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 1 1 1 1 1 1 1 1
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 1 1 1 1 1 1 1 1
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 1 1 1 1 1 1 1 1
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 1 1 1 1 1 1 1 1
Set last two:
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
1 1 1 1 1 1 1 1 2 2
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
1 1 1 1 1 1 1 1 2 2
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
1 1 1 1 1 1 1 1 2 2
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
1 1 1 1 1 1 1 1 2 2
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
1 1 1 1 1 1 1 1 2 2
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
1 1 1 1 1 1 1 1 2 2
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
1 1 1 1 1 1 1 1 2 2
<ShortArrayTransfer> Size: 2 Threshold: 50
<ShortArrayTransfer> size qualifies
1 1 1 1 1 1 1 1 2 2
Set all:
<ShortArrayTransfer> Size: 10 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 2 2 2 2 2 2 2 2
<ShortArrayTransfer> Size: 10 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 2 2 2 2 2 2 2 2
<ShortArrayTransfer> Size: 10 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 2 2 2 2 2 2 2 2
<ShortArrayTransfer> Size: 10 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 2 2 2 2 2 2 2 2
<ShortArrayTransfer> Size: 10 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 2 2 2 2 2 2 2 2
<ShortArrayTransfer> Size: 10 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 2 2 2 2 2 2 2 2
<ShortArrayTransfer> Size: 10 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 2 2 2 2 2 2 2 2
<ShortArrayTransfer> Size: 10 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 2 2 2 2 2 2 2 2
<ShortArrayTransfer> Size: 10 Threshold: 50
<ShortArrayTransfer> size qualifies
2 2 2 2 2 2 2 2 2 2
