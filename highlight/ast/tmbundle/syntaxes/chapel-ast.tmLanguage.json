{
  "name": "chapel-ast",
  "scopeName": "source.ast",
  "fileTypes": ["ast"],
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#astid"
    },
    {
      "include": "#flags"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "match": "\\b((call)|(label)|(function)|(ForLoop)|(Forall)|(Defer)|(if)|(return)|(yield)|(gotoReturn))\\b",
          "name": "keyword.control.ast"
        },
        {
          "match": "'\\b((move)|(end of statement))\\b'",
          "name": "keyword.control.ast"
        },
        {
          "match": "\\b((arg)|(const)|(in)|(_?ref)|(_?array)|(_?domain)|(range)|(unmanaged)|(unknown)|(val)|(type)|(_?void)|(int)|(real)|(bool)|(range)|(locale))\\b",
          "name": "storage.type.ast"
        },
        {
          "match": "\\b(const)\\b\\?",
          "name": "storage.type.ast"
        },
        {
          "match": "\\b(this)\\b",
          "name": "variable.language.this.ast"
        }
      ]
    },
    "astid": {
      "patterns": [
        {
          "match": "\\[\\b([0-9]+)\\b\\]",
          "name": "constant.numeric.ast"
        },
        {
          "match": "\\(\\b([0-9]+)\\b ",
          "captures": {
            "1": { "name": "constant.numeric.ast" }
          }
        }
      ]
    },
    "flags": {
      "patterns": [
        {
          "name": "string.quoted.double.ast",
          "begin": "\"",
          "end": "\"|\n",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.ast"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.ast"
            }
          }
        }
      ]
    }
  }
}
