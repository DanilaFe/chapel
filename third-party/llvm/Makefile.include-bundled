include $(THIRD_PARTY_DIR)/llvm/Makefile.share-bundled

# Link statically for now for the bundled configuration
# If this changes in the fiture:
#  * check for problems finding libstdc++ with different PrgEnv compilers
#  * make sure that 'make install' works correctly in terms of any
#    rpaths embedded in the executable
CHPL_LLVM_DYNAMIC := 0

# Enable RV and Polly if they are in the source directory
LLVM_RV_FILE = $(LLVM_DIR)/$(LLVM_SUBDIR)/tools/rv/
LLVM_RV_FILE2 = $(LLVM_DIR)/$(LLVM_SUBDIR)/../rv/
LLVM_POLLY_FILE = $(LLVM_DIR)/$(LLVM_SUBDIR)/tools/polly/

ifneq ("$(wildcard $(LLVM_RV_FILE))","")
  CHPL_RV := 1
endif

ifneq ("$(wildcard $(LLVM_RV_FILE2))","")
  CHPL_RV := 1
endif

ifneq ("$(wildcard $(LLVM_POLLY_FILE))","")
  CHPL_POLLY := 1
endif

ifdef HAVE_LLVM_CONFIG
ifndef LLVM_LLVM_LIBS

export LLVM_LLVM_LIBS_TMP=$(shell $(LLVM_CONFIG) --ldflags --system-libs --libs bitreader bitwriter ipo instrumentation option objcarcopts profiledata all-targets coverage coroutines lto)
# remove -llibxml2.tbd which seems to appear on some Mac OS X versions
# with LLVM 11.
export LLVM_LLVM_LIBS=$(subst -llibxml2.tbd,,$(LLVM_LLVM_LIBS_TMP))

endif
endif

ifeq ($(CHPL_LLVM_DYNAMIC),1)
  LLVM_CLANG_LIBS=-lclang-cpp
else
  LLVM_CLANG_LIBS=-lclangFrontend -lclangSerialization -lclangDriver -lclangCodeGen -lclangParse -lclangSema -lclangAnalysis -lclangEdit -lclangASTMatchers -lclangAST -lclangLex -lclangBasic
endif

ifdef CHPL_RV
  LLVM_RV_CFLAGS=-DHAVE_LLVM_RV=1
  LLVM_RV_LIBS=-lRV -lgensleef
endif

LLVM_CXXFLAGS=$(LLVM_CONFIG_CXXFLAGS) -DHAVE_LLVM -Wno-comment $(LLVM_RV_CFLAGS)
LLVM_CFLAGS=$(LLVM_CONFIG_CFLAGS) -DHAVE_LLVM $(LLVM_RV_CFLAGS)

LLVM_INCLUDES=-I$(LLVM_INCLUDE_DIR)
LLVM_LIBS=-L$(LLVM_LIB_DIR) $(LLVM_CLANG_LIBS) $(LLVM_RV_LIBS) $(LLVM_LLVM_LIBS) -Wl,-rpath,$(LLVM_LIB_DIR)

CLANG_CC=$(CHPL_MAKE_LLVM_CLANG_C)
CLANG_CXX=$(CHPL_MAKE_LLVM_CLANG_CXX)
